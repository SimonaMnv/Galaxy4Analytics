aliases:
  - &system-deps
      name: System dependencies
      command: |
        sudo apt -y install build-essential libldap2-dev libsasl2-dev postgresql-client
  - &install
      name: Install
      command: |
        ls ~/.pyenv || curl https://pyenv.run | bash
        export PATH="~/.pyenv/bin:$PATH"
        eval "$(pyenv init --path)"
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"
        chmod 755 scripts/install.sh
        scripts/install.sh
  - &secret-folder-creation
    name: Credentials file creation
    command: |
      cd /home/circleci/project/
      mkdir credentials
      cd credentials
      ls
  - &check-dags-file
    name: Chack /dags content
    command: |
      ls ./dags
      ls /home/circleci/project/dags
version: 2.1
jobs:
  build:
    docker:
      - image: circleci/python:3.9
      - image: circleci/postgres
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: airflow_db
          POSTGRES_HOST_AUTH_METHOD: trust
    working_directory: ~/project
    steps:
      - checkout
      - run: *system-deps
      - restore_cache:
          keys:
            - dep-{{ .Environment.CACHE_VERSION }}-{{ checksum "requirements.txt" }}-{{ checksum ".python-version"}}
      - run: *install
      - save_cache:
          key: dep-{{ .Environment.CACHE_VERSION }}-{{ checksum "requirements.txt" }}-{{ checksum ".python-version"}}
          paths:
            - /home/circleci/.cache/pip
            - /home/circleci/.pyenv
      - run: *secret-folder-creation
      - run: *check-dags-file
      - run: echo $GOOGLE_DRIVE_CREDENTIALS
      - run:
          name: CI tasks
          command: |
            ls ~/.pyenv || curl https://pyenv.run | bash
            export PATH="~/.pyenv/bin:$PATH"
            eval "$(pyenv init --path)"
            eval "$(pyenv init -)"
            eval "$(pyenv virtualenv-init -)"
            chmod 755 scripts/setup_python.sh
            scripts/setup_python.sh
            invoke ci
workflows:
  build-and-deploy:
    jobs:
      - build:
          context:
            - Galaxy4Analytics
          filters:
            tags:
              only: /.*/